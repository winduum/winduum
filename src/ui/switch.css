.ui-switch {
  --ui-switch-width: 3rem;
  --ui-switch-height: 1.5rem;
  --ui-switch-font-size: 0.875rem;
  --ui-switch-gap: 0.625rem;
  --ui-switch-padding: 0.375rem;
  --ui-switch-bg: var(--color-dark);
  --ui-switch-radius: var(--rounded-full);
  --ui-switch-outline-width: 3px;
  --ui-switch-outline-offset: 0;
  --ui-switch-outline-opacity: 20%;

  :where(.dark) & {
    --ui-switch-bg: var(--color-body-tertiary);
  }

  display: flex;
  align-items: center;
  gap: 0 var(--ui-switch-gap);
  width: fit-content;
  font-size: var(--ui-switch-font-size);
  text-wrap: balance;

  & :where(label[for], input) {
    cursor: pointer;
  }

  & :where(a) {
    color: var(--color-accent);
    text-decoration: underline;
  }

  & :where(input) {
    width: var(--ui-switch-width);
    height: var(--ui-switch-height);
    display: block;
    position: relative;
    border-radius: var(--ui-switch-radius);
    background-color: var(--ui-switch-bg);
    transition:
      var(--transition-background),
      outline-color var(--duration),
      outline-offset var(--duration);
    appearance: none;
    outline: var(--ui-switch-outline-width) solid transparent;
    outline-offset: 0;
    color: inherit;

    &::before {
      width: calc(var(--ui-switch-height) - var(--ui-switch-padding));
      height: calc(var(--ui-switch-height) - var(--ui-switch-padding));
      background-color: var(--color-light);
      border-radius: var(--ui-switch-radius);
      position: absolute;
      left: var(--ui-switch-height);
      top: 50%;
      content: "";
      display: block;
      margin-left: calc((var(--ui-switch-height) - var(--ui-switch-padding) + var(--ui-switch-padding) / 2) * -1);
      transition: left var(--duration), var(--transition-background);
      transform: translateY(-50%);
    }

    &:where(:required) {
      & + *::after {
        color: var(--color-error);
        content: " *";
      }
    }

    &:disabled {
      opacity: 0.8;
      pointer-events: none;
    }

    &:focus {
      outline-color: color-mix(in sRGB, var(--color-current) var(--ui-switch-outline-opacity), transparent);
      outline-offset: var(--ui-switch-outline-offset);
    }

    &:checked {
      --color-current: var(--color-accent);
      --ui-switch-bg: var(--color-accent);

      &::before {
        background-color: var(--color-light);
        left: 100%;
      }
    }
  }

  &.invalid, .validated & :where(input):invalid {
    --ui-switch-bg: var(--color-error);
  }
}
