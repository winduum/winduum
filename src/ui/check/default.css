.ui-check {
  --ui-check-checked-bg: var(--color-accent);

  display: inline-flex;
  gap: var(--ui-check-gap, var(--spacing-md));
  font-weight: var(--ui-check-font-weight, var(--font-normal));
  font-size: var(--ui-check-font-size, var(--text-sm));
  line-height: var(--ui-check-line-height, calc(1em + var(--ui-check-line-height-ratio, 0.25lh)));
  letter-spacing: var(--ui-check-letter-spacing, inherit);
  text-wrap: balance;

  &:has([type="radio"]) {
    --ui-check-icon: var(--mask-radio);
    --ui-check-radius: 50%;
  }

  & :where(a) {
    color: var(--color-accent);
    text-decoration: underline;
  }

  & :where(input) {
    --tw-border-opacity: 0.2;

    width: var(--ui-check-size);
    height: var(--ui-check-size);
    background-color: var(--ui-check-bg, color-mix(in var(--space), var(--color-current) var(--ui-check-bg-opacity, 0%), var(--ui-check-bg-mix, transparent)));
    border:
      var(--ui-check-border-width, 1px) solid
      color-mix(
        in var(--space),
        var(--ui-check-border-color, var(--color-current)) var(--ui-check-border-opacity, calc(var(--tw-border-opacity) * 100%)),
        var(--ui-check-border-mix, transparent)
      );
    border-radius: var(--ui-check-radius, var(--rounded-md));
    outline: var(--ui-check-outline-width, 3px) solid transparent;
    transition-property: var(--transition);
    transition-timing-function: var(--ease-in-out);
    transition-duration: var(--duration);
    outline-offset: 0;
    flex-shrink: 0;
    display: flex;

    &::before {
      width: var(--ui-check-icon-size);
      height: var(--ui-check-icon-size);
      color: var(--color-accent-foreground);
      mask: var(--ui-check-icon, var(--mask-check));
      transition: var(--transition-color), var(--transition-opacity), var(--transition-transform);
      content: "";
      background-color: currentColor;
      opacity: 0;
      transform: scale(0);
      will-change: transform;
      margin: auto;
    }

    &:where(:required) {
      & + *::after {
        color: var(--color-error);
        content: " *";
      }
    }

    &:enabled {
      &:is(:hover, :focus-visible) {
        --color-current: var(--ui-check-checked-bg);
        --ui-check-border-color: var(--ui-check-checked-bg);
        --ui-check-border-opacity: 75%;
        --ui-check-bg-opacity: 10%;
      }

      &:focus {
        --ui-check-border-color: var(--ui-check-checked-bg);
        --ui-check-border-opacity: 75%;

        outline-color: color-mix(in var(--space), var(--ui-check-checked-bg) var(--ui-check-outline-opacity, 20%), transparent);
        outline-offset: var(--ui-check-outline-offset, 0);
      }
    }

    &:disabled {
      --ui-check-bg-opacity: 15%;

      cursor: not-allowed;
      opacity: var(--ui-check-disabled-opacity, 0.5);
    }

    &[type="checkbox"]:indeterminate {
      --ui-check-icon: var(--mask-indeterminate);
    }

    &:is(:checked, [type="checkbox"]:indeterminate) {
      --ui-check-border-opacity: 0%;
      --ui-check-bg: var(--ui-check-checked-bg);

      &::before {
        opacity: 1;
        transform: scale(1);
      }
    }
  }

  &.invalid, .validated & :where(input):invalid {
    --color-current: var(--color-error);
    --ui-check-border-color: var(--color-error);
    --ui-check-checked-bg: var(--color-error);
    --ui-check-border-opacity: 100%;
  }
}
