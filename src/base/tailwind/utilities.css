@layer utilities {
  .animate {
    animation-duration: var(--transition-duration);
    animation-fill-mode: both;
  }

  .container {
    display: grid;
    grid-template-columns:
      [container-full-start] minmax(var(--container-padding), 1fr)
      [container-lg-start] minmax(0, var(--container-lg))
      [container-start] min(100% - (var(--container-padding) * 2), var(--container-width)) [container-end]
      minmax(0, var(--container-lg)) [container-lg-end]
      minmax(var(--container-padding), 1fr) [container-full-end];
  }

  :where(.container > *) {
    grid-column: container;
  }

  :where(.border-inner-t > *:not(:first-child)) {
    border-top: 1px solid var(--color-body-tertiary);
  }

  :where(.border-inner-r > *:not(:first-child)) {
    border-left: 1px solid var(--color-body-tertiary);
  }

  .flex-col {
    display: flex;
  }

  .flex-between {
    display: flex;
    justify-content: space-between;
    gap: 0.5rem;
  }

  .flex-center {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .skeleton {
    background:
      linear-gradient(
        270deg,
        color-mix(in sRGB, var(--color-body) 50%, var(--color-main)),
        color-mix(in sRGB, var(--color-body) 80%, var(--color-main)),
        color-mix(in sRGB, var(--color-body) 80%, var(--color-main)),
        color-mix(in sRGB, var(--color-body) 50%, var(--color-main))
      );
    background-size: 400% 100%;
    animation: skeleton-wave 1.5s linear infinite;
    opacity: 0.3;
    transition: opacity 0.3s ease-out;
  }
}
